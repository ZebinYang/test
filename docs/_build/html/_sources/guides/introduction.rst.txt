.. Places parent toc into the sidebar

:parenttoc: True

.. include:: ../includes/big_toc_css.rst

=======================
Introduction
=======================

PiML (or π-ML, /ˈpaɪ·ˈem·ˈel/) is a new Python toolbox for interpretable machine learning model development and validation. Through low-code interface and high-code APIs, PiML supports a growing list of inherently interpretable ML models:

- **GLM**: Linear/Logistic Regression with L1 ∨ L2 Regularization

- **GAM**: Generalized Additive Models using B-splines

- **Tree**: Decision Tree for Classification and Regression

- **FIGS**: Fast Interpretable Greedy-Tree Sums (Tan, et al. 2022)

- **XGB2**: Extreme Gradient Boosted Trees of Depth 2 (Chen and Guestrin, 2016; Lengerich, et al. 2020)

- **EBM**: Explainable Boosting Machine (Nori, et al. 2019; Lou, et al. 2013)

- **GAMI-Net**: Generalized Additive Model with Structured Interactions (Yang, Zhang and Sudjianto, 2021)

- **ReLU-DNN**: Deep ReLU Networks using Aletheia Unwrapper and Sparsification (Sudjianto, et al. 2020)


PiML also works for arbitrary supervised ML models under regression and binary classification settings. It supports a whole spectrum of outcome testing, including but not limited to the following:

- **Accuracy**: popular metrics like MSE, MAE for regression tasks and ACC, AUC, Recall, Precision, F1-score for binary classification tasks.

- **Explainability**: post-hoc global explainers (PFI, PDP, ALE) and local explainers (LIME, SHAP).

- **Fairness**: disparity test and segmented analysis by integrating the solas-ai package.

- **WeakSpot**: identification of weak regions with high residuals by slicing techniques.

- **Overfit**: identification of overfitting regions according to train-test performance gap.

- **Reliability**: assessment of prediction uncertainty by split conformal prediction techniques.

- **Robustness**: evaluation of performance degradation under covariate noise perturbation.

- **Resilience**: evaluation of performance degradation under different out-of-distribution scenarios.
